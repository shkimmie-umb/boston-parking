{"version":3,"sources":["Checkbox.js","NavBar.js","ParkingPopCard.js","HitandrunPopCard.js","MapControls.js","ParkingMarkerCard.js","HitandrunMarkerCard.js","InfoWindow.js","App.js","reportWebVitals.js","index.js","images/parkingmeter.svg","images/snowgarage.svg","images/leavingscene.svg","images/vandalism.svg","images/streetcleaning.svg","images/grocery.svg","images/green.svg","images/soup.svg","images/grab.svg","images/foodpantry.svg"],"names":["CheckboxMenu","props","register","handleSubmit","onSubmit","_useState","useState","revealFilter","_useState2","Object","slicedToArray","state","setState","changeArrowState","react_default","a","createElement","className","onClick","fa_index_esm","style","display","type","name","ref","src","parkingMeterIcon","alt","snowGarageIcon","streetSweepingIcon","hitAndRunIcon","vandalismIcon","NavBar","href","target","rel","bs_index_esm","meter","snow_garage","street_sweeping","leaving_scene","vandalism","closeInfoBar","size","opacity","ParkingPopCard","selectedSpot","setSelectedSpot","gmapaddress","concat","LATITUDE","LONGITUDE","esm","latitude","longitude","closeOnClick","onClose","STREET","COUNTS","PAY_POLICY","PARK_NO_PAY","BASE_RATE","HitandrunPopCard","selectedHitandrun","setSelectedHitandrun","INCIDENT_NUMBER","OCCURRED_ON_DATE","OFFENSE_DESCRIPTION","TYPE","MapControls","setViewport","mapRef","float","margin","padding","positionOptions","enableHighAccuracy","trackUserLocation","zoom","ParkingMarkerCard","spot","e","icon","meterIcon","hitandrunIcon","getIcon","HitandrunMarkerCard","hitandrun","InfoWindow","revealInfo","arrow","setArrow","App","viewport","useRef","handleViewportChange","useCallback","newViewport","handleGeocoderViewportChange","objectSpread","transitionDuration","_useState3","_useState4","_useForm","useForm","defaultValues","_useState5","_useState6","setSelectedFood","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","selectedVandalism","setSelectedVandalism","useEffect","listner","key","window","addEventListener","removeEventListener","height","assign","width","onViewportChange","mapStyle","mapboxApiAccessToken","parkingData","map","index","hitandrunData","vandalismData","data","index_m","position","hideOnSelect","queryParams","country","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App_0","document","getElementById","module","exports","p"],"mappings":"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","file":"static/js/main.c6006cb4.chunk.js","sourcesContent":["import React, {useState} from \"react\";\n// import groceryIcon from './images/grocery.svg'\n// import greenIcon from './images/green.svg'\n// import soupIcon from './images/soup.svg'\n// import grabIcon from './images/grab.svg'\n// import foodPantryIcon from './images/foodpantry.svg'\nimport parkingMeterIcon from './images/parkingmeter.svg'\nimport snowGarageIcon from './images/snowgarage.svg'\nimport streetSweepingIcon from './images/streetcleaning.svg'\nimport hitAndRunIcon from './images/leavingscene.svg'\nimport vandalismIcon from './images/vandalism.svg'\nimport { FaAngleDoubleDown,  FaAngleDoubleUp} from 'react-icons/fa'\n\nexport default function CheckboxMenu(props) {\n\n    const {register, handleSubmit, onSubmit} = props\n\n    const [state, setState] = useState({\n        revealFilter: true,\n    })\n\n    const changeMeterState = () =>{\n        setState({\n            meter: !state.meter,\n            revealFilter: state.revealFilter\n        })\n    }\n\n    const UpAndDown = () => {\n        if(state.revealFilter) return 'block'\n        else return 'none'\n    }\n\n    const changeArrowState = () =>{\n        setState({\n            revealFilter: !state.revealFilter\n        })\n    }\n\n\n\n  return (\n    <div className = \"checkbox\">\n        <div className = \"checkbox-navbar-container\" onClick = {changeArrowState}>\n            <div className=\"checkbox-navbar\">\n                <h4>Filter</h4>\n                <div onClick = {changeArrowState}>\n                    {state.revealFilter ? <FaAngleDoubleUp/> : <FaAngleDoubleDown/>}\n                </div>\n            </div>\n        </div>\n\n        <div className = 'checkbox-input-container' style = {{display : UpAndDown()}}>\n        <form onSubmit={handleSubmit(onSubmit)} className ='checkbox-form'>\n            <div className = 'check'>\n                <input type = 'checkbox' name ='meter' ref={register}/>\n                <label className = 'menu'> Meters</label >\n                <img src = {parkingMeterIcon} alt =\"Parking Meter Icon\"/>\n            </div>\n\n            <div className = 'check'>\n                <input type = 'checkbox' name ='snow_garage' ref={register}/>\n                <label className = 'menu'> Garages</label >\n                <img src = {snowGarageIcon} alt =\"Snow Garage Icon\"/>\n            </div>\n\n            <div className = 'check'>\n                <input type = 'checkbox' name ='street_sweeping' ref={register}/>\n                <label className = 'menu'> St. Cleaning</label >\n                <img src = {streetSweepingIcon} alt =\"Street Sweeping Icon\"/>\n            </div>\n\n            <div className = 'check'>\n                <input type = 'checkbox' name ='leaving_scene' ref={register}/>\n                <label className = 'menu'> Hit and Run</label >\n                <img src = {hitAndRunIcon} alt =\"Hit and Run Icon\"/>\n            </div>\n\n            <div className = 'check'>\n                <input type = 'checkbox' name ='vandalism' ref={register}/>\n                <label className = 'menu'> Vandalism</label >\n                <img src = {vandalismIcon} alt =\"Vandalism Icon\"/>\n            </div>\n            {/* <div className = 'check'>\n                <input type = 'checkbox' name ='free' ref={register}/>\n                <label className = 'menu'> Free</label >\n            </div>\n\n            <div className = 'check'>\n                <input type = 'checkbox' name ='$' ref={register}/>\n                <label className = 'menu'> $ (Inexpensive)</label>\n            </div>\n\n            <div className = 'check'>\n                <input type = 'checkbox' name ='$$' ref={register}/>\n                <label className = 'menu'> $$ (Moderate) </label>\n            </div>\n\n            <div className = 'check'>\n                <input type = 'checkbox' name ='$$$' ref={register}/>\n                <label className = 'menu'> $$$ (Expensive) </label>\n            </div>\n\n            <div className = 'check'>\n                <input type = 'checkbox' name ='status' ref={register}/>  \n                <label className = 'menu'> In Business</label>\n            </div>\n\n            <div className = 'check'>\n                <input type = 'checkbox' name ='Greenmarket' ref={register}/>\n                <label className = 'menu'> Greenmarket </label>\n                <img src = {greenIcon} alt =\"Food Icon\"/>\n            </div>\n\n            <div className = 'check'>\n                <input type = 'checkbox' name ='Grocery' ref={register}/>\n                <label className = 'menu'>Grocery Store </label>\n                <img src = {groceryIcon} alt =\"Food Icon\"/>\n            </div>\n\n            <div className = 'check'>\n                <input type = 'checkbox' name = 'GrabAndGo' ref={register}/>\n                <label className = 'menu'> Grab & Go Meals </label>\n                <img src = {grabIcon} alt =\"Food Icon\"/>\n            </div>\n\n            <div className = 'check'>\n                <input type = 'checkbox' name = 'FoodPantry' ref={register}/>\n                <label className = 'menu'> Food Pantry</label>\n                <img src = {foodPantryIcon} alt =\"Food Icon\"/>\n            </div>\n\n            <div className = 'check'>\n                <input type = 'checkbox' name ='SoupKitchen' ref={register}/>\n                <label className = 'menu'>Soup Kitchen</label>\n                <img src = {soupIcon} alt =\"Food Icon\"/>\n            </div> */}\n            \n            <div className= 'check-submit'>\n                <button type=\"submit\">Submit</button>\n            </div>\n        </form>\n        \n        </div>\n    </div>\n  );\n}\n","import React from 'react'\nimport { BsFillInfoCircleFill } from \"react-icons/bs\"\n\nexport default function NavBar(props) {\n    const {state, setState} = props\n\n    const changeInfoBarState = () =>{\n        setState({\n            meter: state.meter,\n            snow_garage: state.snow_garage,\n            street_sweeping: state.street_sweeping,\n            leaving_scene: state.leaving_scene,\n            vandalism: state.vandalism,\n            closeInfoBar: !state.closeInfoBar\n        })\n    }\n\n    return (\n        <div className=\"navbar\">\n        <h1>Boston Parking</h1>\n        <div className=\"navbar-links\">\n            <a href = 'https://shkimmie-umb.github.io/CS697_portfolio/' target=\"_blank\" rel=\"noopener noreferrer\"> SangHyuk Portfolio</a>\n            <a href = 'https://github.com/shkimmie-umb/boston-parking' target=\"_blank\" rel=\"noopener noreferrer\"> Code</a>\n            <a href = 'https://data.boston.gov/dataset/?q=parking' target=\"_blank\" rel=\"noopener noreferrer\"> Data</a>\n        </div>\n\n        <div className = 'info-icon'>\n           <BsFillInfoCircleFill onClick = {changeInfoBarState} size={25} opacity = '0.5'/>\n        </div>\n\n        </div>\n\n    )\n}\n","import React from 'react'\nimport {Popup} from 'react-map-gl'\n\nexport default function ParkingPopCard(props){\n    const {selectedSpot, setSelectedSpot} = props\n    const gmapaddress = `https://www.google.com/maps/search/?api=1&query=${selectedSpot.LATITUDE},${selectedSpot.LONGITUDE}`\n    return(\n        <Popup\n            latitude = {selectedSpot.LATITUDE}\n            longitude = {selectedSpot.LONGITUDE}\n            closeOnClick={false}\n            onClose = {()=> setSelectedSpot(null)}\n            >\n            <div className = \"pop-container\">\n            <div className = 'pop-header'>{selectedSpot.STREET + \" meters\"}</div>\n              <br></br>\n            <div className = 'pop-description'>{selectedSpot.COUNTS + \" meters available\"}</div>\n              <br></br>\n            <div className = 'pop-parkinghours'>{\"Parking Hours: \" + selectedSpot.PAY_POLICY}</div>\n              <br></br>\n            <div className = 'pop-freeparkinghours'>{\"Free Parking Hours: \" + selectedSpot.PARK_NO_PAY}</div>\n              <br></br>\n            <div className = 'pop-address'>Location: <br></br> <a href = {`${gmapaddress}`} target=\"_blank\"rel=\"noopener noreferrer\" >{selectedSpot.STREET} Boston, MA</a></div>\n              <br></br>\n            <div className = 'pop-cost'>Cost: {\"$\"+selectedSpot.BASE_RATE + \" Per 15 mins\"}</div>\n            </div>\n          </Popup>\n    )\n}","import React from 'react'\nimport {Popup} from 'react-map-gl'\n\nexport default function HitandrunPopCard(props){\n    const {selectedHitandrun, setSelectedHitandrun} = props\n    const gmapaddress = `https://www.google.com/maps/search/?api=1&query=${selectedHitandrun.latitude},${selectedHitandrun.longitude}`\n    return(\n        <Popup\n            latitude = {selectedHitandrun.latitude}\n            longitude = {selectedHitandrun.longitude}\n            closeOnClick={false}\n            onClose = {()=> setSelectedHitandrun(null)}\n            >\n            <div className = \"pop-container\">\n            <div className = 'pop-header'>{\"#\"+selectedHitandrun.INCIDENT_NUMBER}</div>\n              <br></br>\n            <div className = 'pop-incident'>{selectedHitandrun.OCCURRED_ON_DATE}</div>\n              <br></br>\n            <div className = 'pop-description'>{selectedHitandrun.OFFENSE_DESCRIPTION}</div>\n              <br></br>\n            <div className = 'pop-address'>Location: <br></br> <a href = {`${gmapaddress}`} target=\"_blank\"rel=\"noopener noreferrer\" >{selectedHitandrun.STREET}, Boston, MA</a></div>\n              <br></br>\n            <div className = 'pop-type'>Incident type: {selectedHitandrun.TYPE}</div>\n            </div>\n          </Popup>\n    )\n}","import React  from 'react'\nimport {GeolocateControl, NavigationControl} from 'react-map-gl'\n\nexport default function MapControls(props){\n    const {setViewport, mapRef} = props\n\n    const geolocateStyle = {\n        float: 'left',\n        margin: '8px',\n        padding: '8px'\n      };\n\n\n      const resetMap = () => {\n          setViewport({\n            latitude: 42.343639, //40.7127281\n            longitude: -71.094861, //74.0060\n            zoom: 11\n          })\n      }\n\n    return(\n        <div className = \"controls-container\">\n            <div className = 'zoom-control'>\n                <NavigationControl mapRef = {mapRef}/>\n            </div>\n\n            <div className = \"geolocate-control\">\n                <GeolocateControl\n                style = {geolocateStyle}\n                positionOptions={{ enableHighAccuracy: true }}\n                trackUserLocation={true}\n                ></GeolocateControl>\n                <button className = 'home-bttn' \n                    onClick = {resetMap}>RESET MAP\n                </button>\n            </div>\n\n            \n      </div>\n    )\n}","import React from 'react'\nimport {Marker} from 'react-map-gl'\n// import groceryIcon from './images/grocery.svg'\n// import greenIcon from './images/green.svg'\n// import soupIcon from './images/soup.svg'\n// import grabIcon from './images/grab.svg'\n// import foodPantryIcon from './images/foodpantry.svg'\nimport meterIcon from './images/parkingmeter.svg'\nimport snowGarageIcon from './images/snowgarage.svg'\nimport hitandrunIcon from './images/leavingscene.svg'\nimport vandalismIcon from './images/vandalism.svg'\n\nexport default function ParkingMarkerCard(props){\n    const {spot, setSelectedSpot, state} = props\n\n    const getIcon = (type) => {\n        let icon;\n        // if(type === \"Grocery\") icon = groceryIcon\n        // if(type === \"GrabAndGo\") icon = grabIcon\n        // if(type === \"Greenmarket\") icon = greenIcon\n        // if(type === \"SoupKitchen\") icon = soupIcon\n        // if(type === \"FoodPantry\") icon = foodPantryIcon\n        if(type === \"meter\") icon = meterIcon\n        if(type === \"snow_garage\") icon = snowGarageIcon\n        if(type === \"leaving_scene\") icon = hitandrunIcon\n        if(type === \"vandalism\") icon = vandalismIcon\n        return icon\n    }\n\n    const hideOrShow = (type) => {\n        if(type === 'meter' && !state.meter) return 'none'\n        if(type === 'snow_garage' && !state.snow_garage) return 'none'\n        if(type === 'street_sweeping' && !state.street_sweeping) return 'none'\n        if(type === 'leaving_scene' && !state.leaving_scene) return 'none'\n        if(type === 'vandalism' && !state.vandalism) return 'none'\n        else return \"block\"\n    }\n    return(\n        <Marker\n            latitude = {spot.LATITUDE} \n            longitude = {spot.LONGITUDE}>\n            <button \n              style = {{display: hideOrShow(spot.TYPE)}}\n              className = \"marker-btn\" onClick = {e => {\n                // e.preventDefault()\n                setSelectedSpot(spot)\n              }}>\n              <img src = {getIcon(spot.TYPE)} alt =\"Parking Icon\"/>\n            </button>\n          </Marker>\n    )\n}","import React from 'react'\nimport {Marker} from 'react-map-gl'\n// import groceryIcon from './images/grocery.svg'\n// import greenIcon from './images/green.svg'\n// import soupIcon from './images/soup.svg'\n// import grabIcon from './images/grab.svg'\n// import foodPantryIcon from './images/foodpantry.svg'\nimport meterIcon from './images/parkingmeter.svg'\nimport snowGarageIcon from './images/snowgarage.svg'\nimport hitandrunIcon from './images/leavingscene.svg'\nimport vandalismIcon from './images/vandalism.svg'\n\nexport default function HitandrunMarkerCard(props){\n    const {hitandrun, setSelectedHitandrun, state} = props\n\n    const getIcon = (type) => {\n        let icon;\n        // if(type === \"Grocery\") icon = groceryIcon\n        // if(type === \"GrabAndGo\") icon = grabIcon\n        // if(type === \"Greenmarket\") icon = greenIcon\n        // if(type === \"SoupKitchen\") icon = soupIcon\n        // if(type === \"FoodPantry\") icon = foodPantryIcon\n        if(type === \"meter\") icon = meterIcon\n        if(type === \"snow_garage\") icon = snowGarageIcon\n        if(type === \"leaving_scene\") icon = hitandrunIcon\n        if(type === \"vandalism\") icon = vandalismIcon\n        return icon\n    }\n\n    const hideOrShow = (type) => {\n        if(type === 'meter' && !state.meter) return 'none'\n        if(type === 'snow_garage' && !state.snow_garage) return 'none'\n        if(type === 'street_sweeping' && !state.street_sweeping) return 'none'\n        if(type === 'leaving_scene' && !state.leaving_scene) return 'none'\n        if(type === 'vandalism' && !state.vandalism) return 'none'\n        else return \"block\"\n    }\n    return(\n        <Marker\n            latitude = {hitandrun.latitude} \n            longitude = {hitandrun.longitude}>\n            <button \n              style = {{display: hideOrShow(hitandrun.TYPE)}}\n              className = \"marker-btn\" onClick = {e => {\n                // e.preventDefault()\n                setSelectedHitandrun(hitandrun)\n              }}>\n              <img src = {getIcon(hitandrun.TYPE)} alt =\"Parking Icon\"/>\n            </button>\n          </Marker>\n    )\n}","import React, {useState} from \"react\";\nimport { FaAngleDoubleDown,  FaAngleDoubleUp, FaWindowClose} from 'react-icons/fa'\n\nexport default function InfoWindow(props) {\n\n    const {state, setState} = props\n\n    const [arrow, setArrow] = useState({\n        revealInfo: false\n    })\n\n    const UpAndDown = () => {\n        if(arrow.revealInfo) return 'block'\n        else return 'none'\n    }\n\n    const closeInfoBar = () => {\n        if(state.closeInfoBar) return 'block'\n        else return 'none'\n    }\n\n    const changeInfoArrowState = () =>{\n            setArrow({\n            revealInfo: !arrow.revealInfo\n        })\n    }\n\n    const changeInfoBarState = () =>{\n        setState({\n            meter: state.meter,\n            snow_garage: state.snow_garage,\n            street_sweeping: state.street_sweeping,\n            leaving_scene: state.leaving_scene,\n            vandalism: state.vandalism,\n            closeInfoBar: false\n        })\n    }\n\n  return (\n    <div className = \"info-window\" style = {{display : closeInfoBar()}}>\n        <div className = 'info-window-container' style = {{display : UpAndDown()}}>\n            <p>\n                Welcome!\n                <br></br>\n                <br></br>\n                Use this map to find your safe parking spots!\n                <br></br>\n                Hours and locations on this map are subject to change.\n            </p>\n        </div>\n        <div className = \"info-navbar-container\" onClick = {changeInfoArrowState}>\n            <div className=\"info-navbar\">\n                <h4>Find Boston Parking Information</h4>\n                <div>\n                    {arrow.revealInfo ? <FaAngleDoubleDown/> : <FaAngleDoubleUp/>}\n                </div>\n\n                <div className = \"info-window-close-bttn\" onClick = {changeInfoBarState}>\n                    <FaWindowClose opacity = \"0.5\"/>\n                </div>\n            </div>\n        </div>\n    </div>\n  );\n}","import React, {useState, useEffect,  useCallback, useRef} from 'react'\nimport ReactMapGL from 'react-map-gl'\nimport Geocoder from 'react-map-gl-geocoder'\nimport { useForm } from \"react-hook-form\";\nimport foodData from \"./food-map-data.json\"\nimport parkingData from \"./meter.json\"\nimport garageData from \"./snowgarage.json\"\nimport hitandrunData from \"./leavingscene.json\"\nimport vandalismData from \"./vandalism.json\"\nimport CheckboxMenu from './Checkbox'\nimport NavBar from './NavBar'\nimport PopCard from './PopCard'\nimport ParkingPopCard from './ParkingPopCard'\nimport GaragePopCard from './GaragePopCard'\nimport HitandrunPopCard from './HitandrunPopCard'\nimport MapControls from './MapControls'\nimport MarkerCard from './MarkerCard'\nimport ParkingMarkerCard from './ParkingMarkerCard'\nimport GarageMarkerCard from './GarageMarkerCard'\nimport HitandrunMarkerCard from './HitandrunMarkerCard'\nimport InfoWindow from './InfoWindow'\n\nimport './App.css';\nimport 'react-dropdown/style.css';\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css'\n\nconst App = () => {\n\n  //Setting up viewport and geocoder\n  const [viewport, setViewport] = useState({\n    // latitude: 40.7128,\n    // longitude: -74.0060152,\n    latitude: 42.343639,\n    longitude: -71.094861,\n    zoom: 14,\n  });\n\n  const mapRef = useRef();\n\n  const handleViewportChange = useCallback(\n    (newViewport) => setViewport(newViewport),\n    []\n  );\n  \n  const handleGeocoderViewportChange = useCallback(\n    (newViewport) => {\n      const geocoderDefaultOverrides = { transitionDuration: 1000 };\n      return handleViewportChange({\n        ...newViewport,\n        ...geocoderDefaultOverrides\n      });\n    },\n    []\n  );\n\n  const params = {\n    country: \"us\"\n  }\n\n  //Menu Components\n  // const [state, setState] = useState({\n  //   free: true,\n  //   $: true,\n  //   $$: true,\n  //   $$$: true,\n  //   status: false,\n  //   Greenmarket: true,\n  //   Grocery: true,\n  //   GrabAndGo: true,\n  //   FoodPantry: true,\n  //   SoupKitchen: true,\n  //   closeInfoBar: false\n  // })\n  const [state, setState] = useState({\n    meter: true,\n    snow_garage: true,\n    street_sweeping: true,\n    leaving_scene: true,\n    vandalism: true\n  })\n\n\n  // const { register, handleSubmit } = useForm({\n  //   defaultValues: {\n  //     free: true,\n  //     $: true,\n  //     $$: true,\n  //     $$$: true,\n  //     status: false,\n  //     Greenmarket: true,\n  //     Grocery: true,\n  //     GrabAndGo: true,\n  //     FoodPantry: true,\n  //     SoupKitchen: true\n  //   }\n  // });\n  const { register, handleSubmit } = useForm({\n    defaultValues: {\n      meter: true,\n      snow_garage: true,\n      street_sweeping: true,\n      leaving_scene: true,\n      vandalism: true\n    }\n  });\n\n\n  // const onSubmit = data => {\n  //   setState({\n  //     free: data.free,\n  //     $: data.$,\n  //     $$: data.$$,\n  //     $$$: data.$$$,\n  //     status: data.status,\n  //     Greenmarket: data.Greenmarket,\n  //     Grocery: data.Grocery,\n  //     GrabAndGo: data.GrabAndGo,\n  //     FoodPantry: data.FoodPantry,\n  //     SoupKitchen: data.SoupKitchen\n  //   })\n  // };\n  const onSubmit = data => {\n    setState({\n      meter: data.meter,\n      snow_garage: data.snow_garage,\n      street_sweeping: data.street_sweeping,\n      leaving_scene: data.leaving_scene,\n      vandalism: data.vandalism\n    })\n  };\n\n\n  //Markers\n  const [selectedFood, setSelectedFood] = useState(null)\n  const [selectedSpot, setSelectedSpot] = useState(null)\n  const [selectedGarage, setSelectedGarage] = useState(null)\n  const [selectedHitandrun, setSelectedHitandrun] = useState(null)\n  const [selectedVandalism, setSelectedVandalism] = useState(null)\n  \n  useEffect(() => {\n      const listner = (e) => {\n        if(e.key === \"Escape\") setSelectedFood(null)\n      }\n\n      window.addEventListener(\"keydown\", listner)\n\n      return () => {\n        window.removeEventListener('keydown', listner)\n      }\n  }, [])\n\n  const getCord = (str) =>{\n    return JSON.parse(str)\n  }\n\n  return (\n    <div className = 'app' style={{ height: \"100vh\" }}>\n      <NavBar state = {state} setState = {setState}/>\n\n      <ReactMapGL\n        ref={mapRef}\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        onViewportChange={handleViewportChange}\n        mapStyle = \"mapbox://styles/mapbox/streets-v12\"\n        mapboxApiAccessToken=\"pk.eyJ1Ijoic2hraW1taWUiLCJhIjoiY2x3NzljaXFkMWNlZjJqcGZ6dTcwbTI4biJ9.mrf2iqSuC7WR32PqdQh1eA\"\n      >\n\n        {/* {foodData.map((food, index) => (\n          <MarkerCard \n            key = {index}\n            food = {food}\n            setSelectedFood = {setSelectedFood}\n            getCord = {getCord}\n            state = {state}\n          />\n        ))} */}\n\n        {/* {selectedFood ? (\n          <PopCard \n            getCord = {getCord} \n            setSelectedFood ={setSelectedFood} \n            selectedFood = {selectedFood}\n          />\n        ) : null} */}\n\n        {/* Meter icons */}\n        {parkingData.map((spot, index) => (\n          <ParkingMarkerCard \n            key = {index}\n            spot = {spot}\n            setSelectedSpot = {setSelectedSpot}\n            state = {state}\n          />\n        ))}\n        {/* Meter popup */}\n        {selectedSpot ? (\n          <ParkingPopCard \n            setSelectedSpot ={setSelectedSpot} \n            selectedSpot = {selectedSpot}\n          />\n        ) : null}\n\n        {/* Garage icons */}\n        {/* {garageData.map((garage, index) => (\n          <GarageMarkerCard \n            key = {index}\n            garage = {garage}\n            setSelectedGarage = {setSelectedGarage}\n            state = {state}\n          />\n        ))} */}\n        {/* Garage popup */}\n        {/* {selectedGarage ? (\n          <GaragePopCard \n            setSelectedGarage ={setSelectedGarage} \n            selectedGarage = {selectedGarage}\n          />\n        ) : null} */}\n\n        {/* Hitandrun icons */}\n        {hitandrunData.map((hitandrun, index) => (\n          <HitandrunMarkerCard \n            key = {index}\n            hitandrun = {hitandrun}\n            setSelectedHitandrun = {setSelectedHitandrun}\n            state = {state}\n          />\n        ))}\n        {/* Hitandrun popup */}\n        {selectedHitandrun ? (\n          <HitandrunPopCard \n            setSelectedHitandrun ={setSelectedHitandrun} \n            selectedHitandrun = {selectedHitandrun}\n          />\n        ) : null}\n\n        {/* Vandalism icons */}\n        {vandalismData.map((vandalism, index) => (\n          <HitandrunMarkerCard \n            key = {index}\n            hitandrun = {vandalism}\n            setSelectedHitandrun = {setSelectedVandalism}\n            state = {state}\n          />\n        ))}\n        {/* Vandalism popup */}\n        {selectedVandalism ? (\n          <HitandrunPopCard \n            setSelectedHitandrun ={setSelectedVandalism} \n            selectedHitandrun = {selectedVandalism}\n          />\n        ) : null}\n\n\n        \n\n        <div className = 'left-side'>\n          <MapControls setViewport = {setViewport} \n            handleViewportChange = {handleViewportChange}\n            mapRef = {mapRef}\n          />\n\n           <CheckboxMenu\n          setState = {setState}\n          register = {register} \n          handleSubmit = {handleSubmit} \n          onSubmit = {onSubmit}/>\n        </div>\n\n        <InfoWindow state = {state} setState = {setState}/>\n\n          <Geocoder\n            mapRef={mapRef}\n            onViewportChange={handleGeocoderViewportChange}\n            mapboxApiAccessToken=\"pk.eyJ1Ijoic2hraW1taWUiLCJhIjoiY2x3NzljaXFkMWNlZjJqcGZ6dTcwbTI4biJ9.mrf2iqSuC7WR32PqdQh1eA\"\n            position= \"top-right\"\n            hideOnSelect={true}\n            queryParams={params}\n          />\n\n\n      </ReactMapGL>\n    </div>\n  );\n};\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/parkingmeter.240151f9.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowgarage.1c948c1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/leavingscene.2692236d.svg\";","module.exports = __webpack_public_path__ + \"static/media/vandalism.4fcc0325.svg\";","module.exports = __webpack_public_path__ + \"static/media/streetcleaning.16bb04c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/grocery.653d7e92.svg\";","module.exports = __webpack_public_path__ + \"static/media/green.3770045a.svg\";","module.exports = __webpack_public_path__ + \"static/media/soup.cf962d04.svg\";","module.exports = __webpack_public_path__ + \"static/media/grab.f8ab4e03.svg\";","module.exports = __webpack_public_path__ + \"static/media/foodpantry.99f1dd75.svg\";"],"sourceRoot":""}